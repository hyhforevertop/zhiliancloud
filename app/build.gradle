plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.jetbrains.kotlin.android)
    id("kotlin-parcelize")
}

android {
    namespace 'com.matter.myapplication2'
    compileSdk 34

    defaultConfig {
        applicationId "com.matter.myapplication2"
        minSdk 31
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.1'
    }
    packaging {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    if (matterSdkSourceBuild.toBoolean() && !matterBuildSrcDir.isEmpty()) {
        externalNativeBuild {
            cmake {
                path file(matterBuildSrcDir + '/CMakeLists.txt')
                version '3.10.2'
            }
        }
    } else {
        sourceSets {
            main {
                jniLibs.srcDirs = ['libs/jniLibs']
            }
        }
    }
}

dependencies {

    implementation libs.androidx.core.ktx
    implementation libs.androidx.lifecycle.runtime.ktx
    implementation libs.androidx.activity.compose
    implementation platform(libs.androidx.compose.bom)
    implementation libs.androidx.ui
    implementation libs.androidx.ui.graphics
    implementation libs.androidx.ui.tooling.preview
    implementation libs.androidx.material3
    implementation libs.androidx.appcompat

    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
    androidTestImplementation platform(libs.androidx.compose.bom)
    androidTestImplementation libs.androidx.ui.test.junit4
    debugImplementation libs.androidx.ui.tooling
    debugImplementation libs.androidx.ui.test.manifest

    implementation libs.androidx.navigation.navigation.compose
    implementation 'com.squareup.okhttp3:okhttp:4.9.3'
    implementation 'com.squareup.okio:okio:2.8.0'
    implementation 'com.google.zxing:core:3.4.1'
    implementation 'com.github.GrenderG:Toasty:1.5.2'

    implementation libs.java.websocket


    implementation 'com.github.jenly1314.UltraSwipeRefresh:refresh:1.2.0'


    implementation fileTree(dir: "libs", include: ["*.jar", "*.so"])

    // CameraX core library using the camera2 implementation
    def camerax_version = "1.4.0-beta02"
    // The following line is optional, as the core library is included indirectly by camera-camera2
    implementation "androidx.camera:camera-core:${camerax_version}"
    implementation "androidx.camera:camera-camera2:${camerax_version}"
    // If you want to additionally use the CameraX Lifecycle library
    implementation "androidx.camera:camera-lifecycle:${camerax_version}"
    // If you want to additionally use the CameraX View class
    implementation "androidx.camera:camera-view:${camerax_version}"

    implementation 'com.google.code.gson:gson:2.8.5'

    implementation 'com.google.mlkit:barcode-scanning:17.0.2'
    implementation("com.google.accompanist:accompanist-permissions:0.18.0")
    implementation("io.coil-kt:coil-compose:1.3.2")
    implementation("com.google.zxing:core:3.4.1")
    implementation("com.caverock:androidsvg:1.4")
    implementation 'org.jmdns:jmdns:3.5.8'
    implementation("androidx.media3:media3-exoplayer:1.2.0")
    implementation("androidx.media3:media3-ui:1.2.0")
}
